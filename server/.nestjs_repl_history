await get(FilmService).findWithActors(1);
get(FilmService).findWithActors(1);
get(FilmService).findWithActor(1);
pipe.subscribe(val => val.then(film => console.log(film?film.title:'n/A')))
pipe.subscribe(val => val.then(film => console.log(film?film.title:'n/A)))
pipe.subscribe(val => val.then(film => console.log(film)))
pipe.subscribe(val => val.then(film => console.log(film))))
pipe.subscribe(val => val.then(film => console.log(film)));)
pipe.subscribe(val => console.log(val))
const pipe=get(FilmService).findOne(1);
pipe.subscribe(async v=>{ const film=await v();});
pipe.subscribe(asyn v=>{ const film=await v();});
pipe.subscribe(v=>console.log(v.title));
pipe.subscribe(v=>console.log(v));
const pipe=get(FilmService).findOne(1);
pipe.subscribe(v => console.log(v));
const pipe=get(FilmService).findOne(1);
pipe.subscribe(v => console.log(v));
const pipe=get(FilmService).findOne(1);
pipe.subscribe(val => console.log(val));
pipe.subscribe
const pipe=get(FilmService).findOne(1);
pipe.subscribe(async x => { const test= await x(); console.log(test);})
pipe.subscribe(async x => { const test= await x(); console.log(test);}))
pipe.subscribe(x => { const test= await x(); console.log(test);}))
pipe.subscribe(x => { const test= await x(); console.log(test);});)
pipe.subscribe(x => console.log(x))
const pipe=get(FilmService).findOne(1);
const film=get(FilmService).findOne(1);
film